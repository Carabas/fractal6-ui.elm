-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Fractal.Object.EventCountAggregateResult exposing (..)

import Fractal.InputObject
import Fractal.Interface
import Fractal.Object
import Fractal.Scalar
import Fractal.ScalarCodecs
import Fractal.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


count : SelectionSet (Maybe Int) Fractal.Object.EventCountAggregateResult
count =
    Object.selectionForField "(Maybe Int)" "count" [] (Decode.int |> Decode.nullable)


unread_eventsMin : SelectionSet (Maybe Int) Fractal.Object.EventCountAggregateResult
unread_eventsMin =
    Object.selectionForField "(Maybe Int)" "unread_eventsMin" [] (Decode.int |> Decode.nullable)


unread_eventsMax : SelectionSet (Maybe Int) Fractal.Object.EventCountAggregateResult
unread_eventsMax =
    Object.selectionForField "(Maybe Int)" "unread_eventsMax" [] (Decode.int |> Decode.nullable)


unread_eventsSum : SelectionSet (Maybe Int) Fractal.Object.EventCountAggregateResult
unread_eventsSum =
    Object.selectionForField "(Maybe Int)" "unread_eventsSum" [] (Decode.int |> Decode.nullable)


unread_eventsAvg : SelectionSet (Maybe Float) Fractal.Object.EventCountAggregateResult
unread_eventsAvg =
    Object.selectionForField "(Maybe Float)" "unread_eventsAvg" [] (Decode.float |> Decode.nullable)


pending_contractsMin : SelectionSet (Maybe Int) Fractal.Object.EventCountAggregateResult
pending_contractsMin =
    Object.selectionForField "(Maybe Int)" "pending_contractsMin" [] (Decode.int |> Decode.nullable)


pending_contractsMax : SelectionSet (Maybe Int) Fractal.Object.EventCountAggregateResult
pending_contractsMax =
    Object.selectionForField "(Maybe Int)" "pending_contractsMax" [] (Decode.int |> Decode.nullable)


pending_contractsSum : SelectionSet (Maybe Int) Fractal.Object.EventCountAggregateResult
pending_contractsSum =
    Object.selectionForField "(Maybe Int)" "pending_contractsSum" [] (Decode.int |> Decode.nullable)


pending_contractsAvg : SelectionSet (Maybe Float) Fractal.Object.EventCountAggregateResult
pending_contractsAvg =
    Object.selectionForField "(Maybe Float)" "pending_contractsAvg" [] (Decode.float |> Decode.nullable)
