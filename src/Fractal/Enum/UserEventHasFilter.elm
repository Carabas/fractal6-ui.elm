-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Fractal.Enum.UserEventHasFilter exposing (..)

import Json.Decode as Decode exposing (Decoder)


type UserEventHasFilter
    = CreatedAt
    | IsRead
    | User
    | Event


list : List UserEventHasFilter
list =
    [ CreatedAt, IsRead, User, Event ]


decoder : Decoder UserEventHasFilter
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "createdAt" ->
                        Decode.succeed CreatedAt

                    "isRead" ->
                        Decode.succeed IsRead

                    "user" ->
                        Decode.succeed User

                    "event" ->
                        Decode.succeed Event

                    _ ->
                        Decode.fail ("Invalid UserEventHasFilter type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : UserEventHasFilter -> String
toString enum____ =
    case enum____ of
        CreatedAt ->
            "createdAt"

        IsRead ->
            "isRead"

        User ->
            "user"

        Event ->
            "event"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe UserEventHasFilter
fromString enumString____ =
    case enumString____ of
        "createdAt" ->
            Just CreatedAt

        "isRead" ->
            Just IsRead

        "user" ->
            Just User

        "event" ->
            Just Event

        _ ->
            Nothing
